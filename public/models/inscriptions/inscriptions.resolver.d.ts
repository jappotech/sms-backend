import { InscriptionsService } from './inscriptions.service';
import { Inscription } from './entity/inscription.entity';
import { FindManyInscriptionArgs, FindUniqueInscriptionArgs } from './dtos/find.args';
import { CreateInscriptionInput } from './dtos/create-inscription.input';
import { UpdateInscriptionInput } from './dtos/update-inscription.input';
import { GetUserType } from 'src/common/types';
import { PrismaService } from 'src/common/prisma/prisma.service';
import { Prisma } from '@prisma/client';
export declare class InscriptionsResolver {
    private readonly inscriptionsService;
    private readonly prisma;
    constructor(inscriptionsService: InscriptionsService, prisma: PrismaService);
    createInscription(args: CreateInscriptionInput, user: GetUserType): Prisma.Prisma__InscriptionClient<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        reference: string;
        premiereInscription: boolean;
        dernierDiplome: string;
        autreEtablissement: string;
        activiteProfessionnel: string;
        niveau: string;
        statut: string;
        diplomeId: number;
        etudiantId: number;
        classeId: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
    findAll(args: FindManyInscriptionArgs, user: GetUserType): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        reference: string;
        premiereInscription: boolean;
        dernierDiplome: string;
        autreEtablissement: string;
        activiteProfessionnel: string;
        niveau: string;
        statut: string;
        diplomeId: number;
        etudiantId: number;
        classeId: number;
    }[]>;
    findOne(args: FindUniqueInscriptionArgs): Prisma.Prisma__InscriptionClient<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        reference: string;
        premiereInscription: boolean;
        dernierDiplome: string;
        autreEtablissement: string;
        activiteProfessionnel: string;
        niveau: string;
        statut: string;
        diplomeId: number;
        etudiantId: number;
        classeId: number;
    }, null, import("@prisma/client/runtime/library").DefaultArgs>;
    updateInscription(args: UpdateInscriptionInput, user: GetUserType): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        reference: string;
        premiereInscription: boolean;
        dernierDiplome: string;
        autreEtablissement: string;
        activiteProfessionnel: string;
        niveau: string;
        statut: string;
        diplomeId: number;
        etudiantId: number;
        classeId: number;
    }>;
    removeInscription(args: FindUniqueInscriptionArgs, user: GetUserType): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        reference: string;
        premiereInscription: boolean;
        dernierDiplome: string;
        autreEtablissement: string;
        activiteProfessionnel: string;
        niveau: string;
        statut: string;
        diplomeId: number;
        etudiantId: number;
        classeId: number;
    }>;
    etudiant(parent: Inscription): Promise<{}>;
    classe(parent: Inscription): Promise<{}>;
}
